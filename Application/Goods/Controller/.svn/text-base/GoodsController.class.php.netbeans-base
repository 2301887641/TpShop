<?php 
namespace Goods\Controller;
use Admin\Controller\IndexController;

class GoodsController extends IndexController{
    public function add(){//添加
       if(IS_POST){
      
           set_time_limit(0);
          $admin= D("Goods");//D函数必须自己创建模型,一般模型中有验证规则时用D
          if($admin->create()){
            
              if($admin->add()){
                 $this->success("添加成功",U("lst")); 
                 exit; 
                  
              }else
               $this->error("添加失败");   
          }else
              
            $this->error($admin->getError());//从模型中获取失败的原因   
              exit;
          
       }
       $cate=D('category');
       $cate_data=$cate->get_category();
   
       $brand=M('brand');
       $brand_date=$brand->select();
       $ml=M('memberLevel');
       $m_all=$ml->select();
       $type=M('type');
       $type_date=$type->select();
       $recommend=M('recommend');
       $recommends=$recommend->where('rec_type="商品"')->select();
       
       $this->assign(array(
           'cate_date'=>$cate_data,
           'brand_date'=>$brand_date,
           'member_info'=>$m_all,
           'type'=>$type_date,
           'recommend'=>$recommends
       ));
       $this->display();
       } 
       
       public function save($id){//修改 修改表单要有一个隐藏表单域,name位主键
      
        $admin= D("Goods");//D函数必须自己创建模型,一般模型中有验证规则时用D
        if(IS_POST){//判断是否是修改
          
          if($admin->create()){
              if($admin->save()!==false){//返回受影响的行数
                 $this->success("修改成功",U("lst")); 
                 exit; 
                  
              }else
               $this->error("修改失败");   
          }else
              
            $this->error($admin->getError());//从模型中获取失败的原因   
              exit;
          
       }
       $d=$admin->find($id);
       
       $category=D('category');//查询商品类型
       
       $category_data=$category->get_category();
      
       
      $brand=M('brand');//商品品牌
       $brand_data=$brand->select();
       
       $member_level=M('memberLevel');//会员级别
       $member_info=$member_level->select();
       
        $member_price=M('memberPrice');//会员价格
       $member_price=$member_price->select();
       
      $goods_pic=M('goodsPic');//商品图片
      $goods_pics=$goods_pic->where('goods_id='.$id)->select();
    
      $goods_attr=M('goodsAttr');//商品属性
      $goods_attrs=$goods_attr->where('goods_id='.$id)->select();
      $goods_attrs_data=array();
      foreach($goods_attrs as $k=>$g){
          
         $goods_attrs_data[$g['attr_id']][]=$g; 
          
      }
      
   
      
      if($d['type_id']!=0){
          $attribute=M('attribute');
          $attributes=$attribute->where('type_id='.$d['type_id'])->select();
          $this->assign('attributes',$attributes);
      }
      
      $type=M('type');//商品类型
      $types=$type->select();
      
      $recommend=M('recommend');//推荐位
      $recommends=$recommend->where('rec_type="商品"')->select();
      $recommendItem=M('recommendItem');
      $recs=$recommendItem->alias('a')->field('group_concat(a.rec_id) rec_ids')->join('join sh_recommend b on a.rec_id=b.id')->where('goods_id='.$id.' and b.rec_type="商品"')->select();
       
      $this->assign(array(
          'data'=>$d,
          'category'=>$category_data, 
           'brand'=>$brand_data,
           'member_info'=>$member_info,
           'member_price'=>$member_price,
           'goods_pics'=>$goods_pics,
           'type'=>$types,
           'goods_attr'=>$goods_attrs_data,
           'recommend'=>$recommends,
           'recs'=>$recs[0]["rec_ids"]
       ));
       $this->display();
       } 
        
       public function lst(){
          $admin= D("Goods");//D函数必须自己创建模型,一般模型中有验证规则时用D  
          $data=$admin->search(); 
           $this->assign(array(
               'show'=>$data['show'],
               'list'=>$data['list'],
           ));
           $this->display();
       }
       
       public function del($id){
      
              $admin=D('Goods'); 
              $admin->delete($id); 
        
         $this->success("修改成功");   
           
           
           
       }
        public function bdel(){
        $del=I('post.del_check');
        if($del){
           $admin=D('Goods');
           $str=implode(',',$del);
           $admin->delete($str);
       }
       $this->success("删除成功");
       } 
       public function ajaxattr($type_id){
         $attr=  M('attribute');
           $data=$attr->where('type_id='.$type_id)->select();
           echo json_encode($data);
       }
       public function ajaxDel($id){//ajax删除商品图片
           
           $goods_pic=M('goodsPic');
           $goods_pics=$goods_pic->field("logo,sm_logo,big_logo")->where('id='.$id)->find();
           //echo var_dump(IMG_PATH.$goods_pics['logo']);die;
           unlink(IMG_PATH2.$goods_pics['logo']);
           unlink(IMG_PATH2.$goods_pics['sm_logo']);
           unlink(IMG_PATH2.$goods_pics['big_logo']);
           $goods_pic->where('id='.$id)->delete();
       }
       public function ajaxDelGoodsAttr($id){//ajax删除商品属性
           $goodsAttr=M('goodsAttr');
           return $goodsAttr->delete($id);
           
       }
    }
    
    
    
